{"remainingRequest":"/Users/noisemachines/dev/pixel-matrix/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/noisemachines/dev/pixel-matrix/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/noisemachines/dev/pixel-matrix/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/noisemachines/dev/pixel-matrix/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js","dependencies":[{"path":"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js","mtime":1547774398797},{"path":"/Users/noisemachines/dev/pixel-matrix/node_modules/cache-loader/dist/cjs.js","mtime":1547744876783},{"path":"/Users/noisemachines/dev/pixel-matrix/node_modules/babel-loader/lib/index.js","mtime":1547744876677}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n// RGB and HSL conversion utilities from\n// https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\nvar to255 = function to255(x) {\n  return Math.min(Math.floor(x * 256), 255);\n};\n\nvar hue2rgb = function hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}; // RGBA is [0, 255]\n// HSLA is [0, 1]\n\n\nexport var toRgba = function toRgba(pixel) {\n  var r;\n  var g;\n  var b;\n  var h = pixel.hue,\n      s = pixel.saturation,\n      l = pixel.lightness,\n      a = pixel.alpha;\n\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  var red = to255(r);\n  var green = to255(g);\n  var blue = to255(b);\n  var alpha = to255(a);\n  return {\n    red: red,\n    green: green,\n    blue: blue,\n    alpha: alpha\n  };\n};\nexport var toHsla = function toHsla(pixel) {\n  var r = pixel.red,\n      g = pixel.green,\n      b = pixel.blue,\n      a = pixel.alpha;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  a /= 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var middle = (max + min) / 2;\n  var h = middle;\n  var s = middle;\n  var l = middle;\n\n  if (max === min) {\n    h = s = 0;\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        h = (b - r) / d + 2;\n        break;\n\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    hue: h,\n    saturation: s,\n    lightness: s,\n    alpha: a\n  };\n};\nvar RGBA = {\n  channels: 4\n};\nexport var COLOR_PROFILES = {\n  RGBA: RGBA\n};\n\nvar isEven = function isEven(n) {\n  return n % 2 === 0;\n};\n\nvar EMPTY_PIXEL = {\n  red: 0,\n  green: 0,\n  blue: 0,\n  alpha: 255\n};\nexport var vonNeumannOffsets = [{\n  x: -1,\n  y: 0\n}, {\n  x: 1,\n  y: 0\n}, {\n  x: 0,\n  y: -1\n}, {\n  x: 0,\n  y: 1\n}];\nexport var mooreOffsets = [];\n\nfor (var x = -1; x <= 1; x++) {\n  for (var y = -1; y <= 1; y++) {\n    if (x === 0 && y === 0) {\n      continue;\n    }\n\n    mooreOffsets.push({\n      x: x,\n      y: y\n    });\n  }\n}\n\nvar PixelMatrix =\n/** @class */\nfunction () {\n  function PixelMatrix(width, height, pixels) {\n    this.width = width;\n    this.height = height;\n    var pixelsLength = width * height * this.colorProfile.channels;\n\n    if (pixels === undefined) {\n      pixels = new Uint8ClampedArray(pixelsLength);\n    } else {\n      if (pixelsLength !== pixels.length) {\n        throw new Error(\"Expected pixels to have length \" + pixelsLength + \" (width * height * colorProfile.channels) but got \" + pixels.length + \" instead.\");\n      }\n    }\n\n    this.pixels = pixels;\n  }\n\n  PixelMatrix.fromCanvas = function (canvas) {\n    var context = canvas.getContext('2d');\n    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    return new PixelMatrix(canvas.width, canvas.height, imageData.data);\n  };\n\n  Object.defineProperty(PixelMatrix.prototype, \"pixelMatrix\", {\n    get: function get() {\n      if (!this._pixelMatrix) {\n        var pixelMatrix_1 = new Array(this.width);\n        this.forEach(function (pixel, point) {\n          if (!pixelMatrix_1[point.x]) pixelMatrix_1[point.x] = [];\n          pixelMatrix_1[point.x][point.y] = pixel;\n        });\n        this._pixelMatrix = pixelMatrix_1;\n      }\n\n      return this._pixelMatrix;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PixelMatrix.prototype, \"channels\", {\n    get: function get() {\n      return this.colorProfile.channels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PixelMatrix.prototype, \"colorProfile\", {\n    get: function get() {\n      return RGBA;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PixelMatrix.prototype, \"shape\", {\n    get: function get() {\n      return [this.width, this.height];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PixelMatrix.prototype, \"countPixels\", {\n    get: function get() {\n      return this.width * this.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PixelMatrix.prototype.get = function (point) {\n    if (!this.contains(point)) {\n      throw new Error(\"This pixel matrix doesn't contain the point \" + point + \".\");\n    }\n\n    var i = this.getIndex(point);\n    var channels = [];\n\n    for (var channelOffset = 0; channelOffset < this.colorProfile.channels; channelOffset++) {\n      var channel = this.pixels[i + channelOffset];\n      if (!channel) return EMPTY_PIXEL;\n      channels.push(channel);\n    }\n\n    var red = channels[0],\n        green = channels[1],\n        blue = channels[2],\n        alpha = channels[3];\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  };\n\n  PixelMatrix.prototype.getRandomPoint = function () {\n    var x = Math.floor(Math.random() * this.width);\n    var y = Math.floor(Math.random() * this.height);\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  PixelMatrix.prototype.getRandomPixel = function () {\n    var randomPoint = this.getRandomPoint();\n    return this.get(randomPoint);\n  };\n\n  PixelMatrix.prototype.getVonNeumannNeighboringPixels = function (point) {\n    return this.getNeighboringPixels(point, vonNeumannOffsets);\n  };\n\n  PixelMatrix.prototype.getVonNeumannNeighboringPoints = function (point) {\n    return this.getNeighbors(point, vonNeumannOffsets);\n  };\n\n  PixelMatrix.prototype.getMooreNeighboringPixels = function (point) {\n    return this.getNeighboringPixels(point, mooreOffsets);\n  };\n\n  PixelMatrix.prototype.getMooreNeighboringPoints = function (point) {\n    return this.getNeighbors(point, mooreOffsets);\n  };\n\n  PixelMatrix.prototype.getNeighboringPixels = function (point, neighborhood) {\n    var _this = this;\n\n    return this.getNeighbors(point, neighborhood).map(function (neighbor) {\n      return _this.get(neighbor);\n    });\n  };\n\n  PixelMatrix.prototype.getNeighbors = function (point, neighborhood) {\n    var _this = this;\n\n    var neighbors = [];\n    neighborhood.forEach(function (offset) {\n      var neighbor = {\n        x: point.x + offset.x,\n        y: point.y + offset.y\n      };\n\n      if (_this.contains(neighbor)) {\n        neighbors.push(neighbor);\n      }\n    });\n    return neighbors;\n  };\n\n  PixelMatrix.prototype.setHsla = function (point, pixel) {\n    this.set(point, toRgba(pixel));\n  };\n\n  PixelMatrix.prototype.set = function (point, pixel) {\n    var red = pixel.red,\n        green = pixel.green,\n        blue = pixel.blue,\n        alpha = pixel.alpha;\n    var i = this.getIndex(point);\n    this.pixels[i] = red;\n    this.pixels[i + 1] = green;\n    this.pixels[i + 2] = blue;\n    this.pixels[i + 3] = alpha;\n    this.pixelMatrix[point.x][point.y] = pixel;\n  };\n\n  PixelMatrix.prototype.randomDitherFrom = function (newMatrix, samples) {\n    var _this = this;\n\n    if (samples === void 0) {\n      samples = 1000;\n    }\n\n    var _loop_1 = function _loop_1(_) {\n      var point = this_1.getRandomPoint();\n      var newPixel = newMatrix.get(point);\n      var p = newPixel;\n      var darkeningFactor = 0;\n\n      if (Math.random() > 0.5) {\n        p = {\n          red: p.red - darkeningFactor,\n          green: p.green - darkeningFactor,\n          blue: p.blue - darkeningFactor,\n          alpha: 255\n        };\n      }\n\n      this_1.getVonNeumannNeighboringPoints(point).forEach(function (neighbor) {\n        _this.set(neighbor, p);\n      });\n    };\n\n    var this_1 = this;\n\n    for (var _ = 0; _ < samples; _++) {\n      _loop_1(_);\n    }\n  };\n\n  PixelMatrix.prototype.getIndex = function (point) {\n    var x = point.x,\n        y = point.y;\n\n    if (!this.contains(point)) {\n      throw new Error(\"Expected x and y to be less than or equal to (\" + this.width + \", \" + this.height + \") but was actually (\" + x + \", \" + y + \")\");\n    }\n\n    return y * (this.width * this.channels) + x * this.channels;\n  };\n\n  PixelMatrix.prototype.forEach = function (fn) {\n    for (var y = 0; y < this.height; y++) {\n      for (var x = 0; x < this.width; x++) {\n        var point = Object.freeze({\n          x: x,\n          y: y\n        });\n        var pixel = this.get(point);\n        fn(pixel, point, this);\n      }\n    }\n  };\n\n  PixelMatrix.prototype.map = function (fn) {\n    var newPixelMatrix = new PixelMatrix(this.width, this.height);\n    this.forEach(function (pixel, point, pixelMatrix) {\n      var newPixel = fn(pixel, point, pixelMatrix);\n      newPixelMatrix.set(point, newPixel);\n    });\n    return newPixelMatrix;\n  };\n\n  PixelMatrix.prototype.normalizedMap = function (fn) {\n    var _this = this;\n\n    return this.map(function (pixel, point, pixelMatrix) {\n      var normalizedPoint = {\n        x: point.x / _this.width,\n        y: point.y / _this.height\n      };\n      return fn(pixel, normalizedPoint, pixelMatrix);\n    });\n  };\n\n  PixelMatrix.prototype.reduce = function (fn, startingValue) {\n    var total = startingValue;\n    this.forEach(function (pixel, point) {\n      total = fn(total, pixel, point);\n    });\n    return total;\n  };\n\n  PixelMatrix.prototype.getWindow = function (center, width, height) {\n    if (isEven(width)) {\n      throw new Error(\"Expected an odd window width, but got \" + width);\n    }\n\n    if (isEven(height)) {\n      throw new Error(\"Expected an odd window height, but got \" + height);\n    }\n\n    var xRadius = (width - 1) / 2;\n    var yRadius = (height - 1) / 2;\n    var windowMatrix = new PixelMatrix(width, height);\n\n    for (var yOffset = -yRadius; yOffset <= yRadius; yOffset++) {\n      for (var xOffset = -xRadius; xOffset <= xRadius; xOffset++) {\n        var x = center.x + xOffset;\n        var y = center.y + yOffset;\n        var point = {\n          x: x,\n          y: y\n        };\n        var pixel = this.contains(point) ? this.get(point) : EMPTY_PIXEL;\n        var pointInWindow = {\n          x: xOffset + xRadius,\n          y: yOffset + yRadius\n        };\n        windowMatrix.set(pointInWindow, pixel);\n      }\n    }\n\n    return windowMatrix;\n  };\n\n  PixelMatrix.prototype.contains = function (point) {\n    return point.x >= 0 && point.x < this.width && point.y >= 0 && point.y < this.height;\n  };\n\n  PixelMatrix.prototype.toImageData = function () {\n    return new ImageData(this.pixels, this.width, this.height);\n  };\n\n  PixelMatrix.prototype.putPixels = function (canvas) {\n    if (canvas.width !== this.width || canvas.height !== this.height) {\n      throw new Error(\"Expected canvas shape and PixelMatrix shape to be the same, but canvas shape was [\" + canvas.width + \", \" + canvas.height + \"] and PixelMatrix shape was \" + this.shape + \".\");\n    }\n\n    var context = canvas.getContext('2d');\n    context.putImageData(this.toImageData(), 0, 0);\n  };\n\n  PixelMatrix.prototype.getCenter = function () {\n    var x = Math.floor(this.width / 2);\n    var y = Math.floor(this.height / 2);\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return PixelMatrix;\n}();\n\nvar _default = PixelMatrix;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(to255, \"to255\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(hue2rgb, \"hue2rgb\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(toRgba, \"toRgba\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(toHsla, \"toHsla\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(RGBA, \"RGBA\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(COLOR_PROFILES, \"COLOR_PROFILES\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(isEven, \"isEven\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(EMPTY_PIXEL, \"EMPTY_PIXEL\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(vonNeumannOffsets, \"vonNeumannOffsets\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(mooreOffsets, \"mooreOffsets\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(x, \"x\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(y, \"y\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(PixelMatrix, \"PixelMatrix\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/noisemachines/dev/pixel-matrix/built/PixelMatrix.js"],"names":["to255","x","Math","min","floor","hue2rgb","p","q","t","toRgba","pixel","r","g","b","h","hue","s","saturation","l","lightness","a","alpha","red","green","blue","toHsla","max","middle","d","RGBA","channels","COLOR_PROFILES","isEven","n","EMPTY_PIXEL","vonNeumannOffsets","y","mooreOffsets","push","PixelMatrix","width","height","pixels","pixelsLength","colorProfile","undefined","Uint8ClampedArray","length","Error","fromCanvas","canvas","context","getContext","imageData","getImageData","data","Object","defineProperty","prototype","get","_pixelMatrix","pixelMatrix_1","Array","forEach","point","enumerable","configurable","contains","i","getIndex","channelOffset","channel","getRandomPoint","random","getRandomPixel","randomPoint","getVonNeumannNeighboringPixels","getNeighboringPixels","getVonNeumannNeighboringPoints","getNeighbors","getMooreNeighboringPixels","getMooreNeighboringPoints","neighborhood","_this","map","neighbor","neighbors","offset","setHsla","set","pixelMatrix","randomDitherFrom","newMatrix","samples","_loop_1","_","this_1","newPixel","darkeningFactor","fn","freeze","newPixelMatrix","normalizedMap","normalizedPoint","reduce","startingValue","total","getWindow","center","xRadius","yRadius","windowMatrix","yOffset","xOffset","pointInWindow","toImageData","ImageData","putPixels","shape","putImageData","getCenter"],"mappings":"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","sourcesContent":["// RGB and HSL conversion utilities from\n// https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\nvar to255 = function (x) { return Math.min(Math.floor(x * 256), 255); };\nvar hue2rgb = function (p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n};\n// RGBA is [0, 255]\n// HSLA is [0, 1]\nexport var toRgba = function (pixel) {\n    var r;\n    var g;\n    var b;\n    var h = pixel.hue, s = pixel.saturation, l = pixel.lightness, a = pixel.alpha;\n    if (s === 0) {\n        r = g = b = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    var red = to255(r);\n    var green = to255(g);\n    var blue = to255(b);\n    var alpha = to255(a);\n    return { red: red, green: green, blue: blue, alpha: alpha };\n};\nexport var toHsla = function (pixel) {\n    var r = pixel.red, g = pixel.green, b = pixel.blue, a = pixel.alpha;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    a /= 255;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var middle = (max + min) / 2;\n    var h = middle;\n    var s = middle;\n    var l = middle;\n    if (max === min) {\n        h = s = 0;\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return { hue: h, saturation: s, lightness: s, alpha: a };\n};\nvar RGBA = {\n    channels: 4\n};\nexport var COLOR_PROFILES = {\n    RGBA: RGBA\n};\nvar isEven = function (n) { return n % 2 === 0; };\nvar EMPTY_PIXEL = {\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 255\n};\nexport var vonNeumannOffsets = [\n    { x: -1, y: 0 },\n    { x: 1, y: 0 },\n    { x: 0, y: -1 },\n    { x: 0, y: 1 }\n];\nexport var mooreOffsets = [];\nfor (var x = -1; x <= 1; x++) {\n    for (var y = -1; y <= 1; y++) {\n        if (x === 0 && y === 0) {\n            continue;\n        }\n        mooreOffsets.push({ x: x, y: y });\n    }\n}\nvar PixelMatrix = /** @class */ (function () {\n    function PixelMatrix(width, height, pixels) {\n        this.width = width;\n        this.height = height;\n        var pixelsLength = width * height * this.colorProfile.channels;\n        if (pixels === undefined) {\n            pixels = new Uint8ClampedArray(pixelsLength);\n        }\n        else {\n            if (pixelsLength !== pixels.length) {\n                throw new Error(\"Expected pixels to have length \" + pixelsLength + \" (width * height * colorProfile.channels) but got \" + pixels.length + \" instead.\");\n            }\n        }\n        this.pixels = pixels;\n    }\n    PixelMatrix.fromCanvas = function (canvas) {\n        var context = canvas.getContext('2d');\n        var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        return new PixelMatrix(canvas.width, canvas.height, imageData.data);\n    };\n    Object.defineProperty(PixelMatrix.prototype, \"pixelMatrix\", {\n        get: function () {\n            if (!this._pixelMatrix) {\n                var pixelMatrix_1 = new Array(this.width);\n                this.forEach(function (pixel, point) {\n                    if (!pixelMatrix_1[point.x])\n                        pixelMatrix_1[point.x] = [];\n                    pixelMatrix_1[point.x][point.y] = pixel;\n                });\n                this._pixelMatrix = pixelMatrix_1;\n            }\n            return this._pixelMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"channels\", {\n        get: function () {\n            return this.colorProfile.channels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"colorProfile\", {\n        get: function () {\n            return RGBA;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"shape\", {\n        get: function () {\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"countPixels\", {\n        get: function () {\n            return this.width * this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PixelMatrix.prototype.get = function (point) {\n        if (!this.contains(point)) {\n            throw new Error(\"This pixel matrix doesn't contain the point \" + point + \".\");\n        }\n        var i = this.getIndex(point);\n        var channels = [];\n        for (var channelOffset = 0; channelOffset < this.colorProfile.channels; channelOffset++) {\n            var channel = this.pixels[i + channelOffset];\n            if (!channel)\n                return EMPTY_PIXEL;\n            channels.push(channel);\n        }\n        var red = channels[0], green = channels[1], blue = channels[2], alpha = channels[3];\n        return { red: red, green: green, blue: blue, alpha: alpha };\n    };\n    PixelMatrix.prototype.getRandomPoint = function () {\n        var x = Math.floor(Math.random() * this.width);\n        var y = Math.floor(Math.random() * this.height);\n        return { x: x, y: y };\n    };\n    PixelMatrix.prototype.getRandomPixel = function () {\n        var randomPoint = this.getRandomPoint();\n        return this.get(randomPoint);\n    };\n    PixelMatrix.prototype.getVonNeumannNeighboringPixels = function (point) {\n        return this.getNeighboringPixels(point, vonNeumannOffsets);\n    };\n    PixelMatrix.prototype.getVonNeumannNeighboringPoints = function (point) {\n        return this.getNeighbors(point, vonNeumannOffsets);\n    };\n    PixelMatrix.prototype.getMooreNeighboringPixels = function (point) {\n        return this.getNeighboringPixels(point, mooreOffsets);\n    };\n    PixelMatrix.prototype.getMooreNeighboringPoints = function (point) {\n        return this.getNeighbors(point, mooreOffsets);\n    };\n    PixelMatrix.prototype.getNeighboringPixels = function (point, neighborhood) {\n        var _this = this;\n        return this.getNeighbors(point, neighborhood).map(function (neighbor) {\n            return _this.get(neighbor);\n        });\n    };\n    PixelMatrix.prototype.getNeighbors = function (point, neighborhood) {\n        var _this = this;\n        var neighbors = [];\n        neighborhood.forEach(function (offset) {\n            var neighbor = {\n                x: point.x + offset.x,\n                y: point.y + offset.y\n            };\n            if (_this.contains(neighbor)) {\n                neighbors.push(neighbor);\n            }\n        });\n        return neighbors;\n    };\n    PixelMatrix.prototype.setHsla = function (point, pixel) {\n        this.set(point, toRgba(pixel));\n    };\n    PixelMatrix.prototype.set = function (point, pixel) {\n        var red = pixel.red, green = pixel.green, blue = pixel.blue, alpha = pixel.alpha;\n        var i = this.getIndex(point);\n        this.pixels[i] = red;\n        this.pixels[i + 1] = green;\n        this.pixels[i + 2] = blue;\n        this.pixels[i + 3] = alpha;\n        this.pixelMatrix[point.x][point.y] = pixel;\n    };\n    PixelMatrix.prototype.randomDitherFrom = function (newMatrix, samples) {\n        var _this = this;\n        if (samples === void 0) { samples = 1000; }\n        var _loop_1 = function (_) {\n            var point = this_1.getRandomPoint();\n            var newPixel = newMatrix.get(point);\n            var p = newPixel;\n            var darkeningFactor = 0;\n            if (Math.random() > 0.5) {\n                p = {\n                    red: p.red - darkeningFactor,\n                    green: p.green - darkeningFactor,\n                    blue: p.blue - darkeningFactor,\n                    alpha: 255\n                };\n            }\n            this_1.getVonNeumannNeighboringPoints(point).forEach(function (neighbor) {\n                _this.set(neighbor, p);\n            });\n        };\n        var this_1 = this;\n        for (var _ = 0; _ < samples; _++) {\n            _loop_1(_);\n        }\n    };\n    PixelMatrix.prototype.getIndex = function (point) {\n        var x = point.x, y = point.y;\n        if (!this.contains(point)) {\n            throw new Error(\"Expected x and y to be less than or equal to (\" + this.width + \", \" + this.height + \") but was actually (\" + x + \", \" + y + \")\");\n        }\n        return y * (this.width * this.channels) + x * this.channels;\n    };\n    PixelMatrix.prototype.forEach = function (fn) {\n        for (var y = 0; y < this.height; y++) {\n            for (var x = 0; x < this.width; x++) {\n                var point = Object.freeze({ x: x, y: y });\n                var pixel = this.get(point);\n                fn(pixel, point, this);\n            }\n        }\n    };\n    PixelMatrix.prototype.map = function (fn) {\n        var newPixelMatrix = new PixelMatrix(this.width, this.height);\n        this.forEach(function (pixel, point, pixelMatrix) {\n            var newPixel = fn(pixel, point, pixelMatrix);\n            newPixelMatrix.set(point, newPixel);\n        });\n        return newPixelMatrix;\n    };\n    PixelMatrix.prototype.normalizedMap = function (fn) {\n        var _this = this;\n        return this.map(function (pixel, point, pixelMatrix) {\n            var normalizedPoint = {\n                x: point.x / _this.width,\n                y: point.y / _this.height\n            };\n            return fn(pixel, normalizedPoint, pixelMatrix);\n        });\n    };\n    PixelMatrix.prototype.reduce = function (fn, startingValue) {\n        var total = startingValue;\n        this.forEach(function (pixel, point) {\n            total = fn(total, pixel, point);\n        });\n        return total;\n    };\n    PixelMatrix.prototype.getWindow = function (center, width, height) {\n        if (isEven(width)) {\n            throw new Error(\"Expected an odd window width, but got \" + width);\n        }\n        if (isEven(height)) {\n            throw new Error(\"Expected an odd window height, but got \" + height);\n        }\n        var xRadius = (width - 1) / 2;\n        var yRadius = (height - 1) / 2;\n        var windowMatrix = new PixelMatrix(width, height);\n        for (var yOffset = -yRadius; yOffset <= yRadius; yOffset++) {\n            for (var xOffset = -xRadius; xOffset <= xRadius; xOffset++) {\n                var x = center.x + xOffset;\n                var y = center.y + yOffset;\n                var point = { x: x, y: y };\n                var pixel = this.contains(point) ? this.get(point) : EMPTY_PIXEL;\n                var pointInWindow = { x: xOffset + xRadius, y: yOffset + yRadius };\n                windowMatrix.set(pointInWindow, pixel);\n            }\n        }\n        return windowMatrix;\n    };\n    PixelMatrix.prototype.contains = function (point) {\n        return (point.x >= 0 &&\n            point.x < this.width &&\n            point.y >= 0 &&\n            point.y < this.height);\n    };\n    PixelMatrix.prototype.toImageData = function () {\n        return new ImageData(this.pixels, this.width, this.height);\n    };\n    PixelMatrix.prototype.putPixels = function (canvas) {\n        if (canvas.width !== this.width || canvas.height !== this.height) {\n            throw new Error(\"Expected canvas shape and PixelMatrix shape to be the same, but canvas shape was [\" + canvas.width + \", \" + canvas.height + \"] and PixelMatrix shape was \" + this.shape + \".\");\n        }\n        var context = canvas.getContext('2d');\n        context.putImageData(this.toImageData(), 0, 0);\n    };\n    PixelMatrix.prototype.getCenter = function () {\n        var x = Math.floor(this.width / 2);\n        var y = Math.floor(this.height / 2);\n        return { x: x, y: y };\n    };\n    return PixelMatrix;\n}());\nexport default PixelMatrix;\n"]}]}