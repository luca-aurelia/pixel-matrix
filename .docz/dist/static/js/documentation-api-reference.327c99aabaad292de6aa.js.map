{"version":3,"sources":["webpack:///./built/PixelMatrix.js","webpack:///./documentation/api-reference.mdx","webpack:///./documentation/kawase.small.jpg"],"names":["to255","x","Math","min","floor","hue2rgb","p","q","t","RGBA","channels","isEven","n","EMPTY_PIXEL","red","green","blue","alpha","vonNeumannOffsets","y","mooreOffsets","push","PixelMatrix","width","height","pixels","this","pixelsLength","colorProfile","undefined","Uint8ClampedArray","length","Error","fromCanvas","canvas","imageData","getContext","getImageData","data","Object","defineProperty","prototype","get","_pixelMatrix","pixelMatrix_1","Array","forEach","pixel","point","enumerable","configurable","contains","i","getIndex","channelOffset","channel","getRandomPoint","random","getRandomPixel","randomPoint","getVonNeumannNeighboringPixels","getNeighboringPixels","getVonNeumannNeighboringPoints","getNeighbors","getMooreNeighboringPixels","getMooreNeighboringPoints","neighborhood","_this","map","neighbor","neighbors","offset","setHsla","set","r","g","b","h","hue","s","saturation","l","lightness","a","toRgba","pixelMatrix","randomDitherFrom","newMatrix","samples","_loop_1","_","this_1","fn","freeze","newPixelMatrix","newPixel","normalizedMap","normalizedPoint","reduce","startingValue","total","getWindow","center","xRadius","yRadius","windowMatrix","yOffset","xOffset","pointInWindow","toImageData","ImageData","putPixels","shape","putImageData","getCenter","MDXContent","props","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","href","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/documentation-api-reference.14615ef7.js","sourcesContent":["// RGB and HSL conversion utilities from\n// https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\nvar to255 = function (x) { return Math.min(Math.floor(x * 256), 255); };\nvar hue2rgb = function (p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n};\n// RGBA is [0, 255]\n// HSLA is [0, 1]\nexport var toRgba = function (pixel) {\n    var r;\n    var g;\n    var b;\n    var h = pixel.hue, s = pixel.saturation, l = pixel.lightness, a = pixel.alpha;\n    if (s === 0) {\n        r = g = b = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    var red = to255(r);\n    var green = to255(g);\n    var blue = to255(b);\n    var alpha = to255(a);\n    return { red: red, green: green, blue: blue, alpha: alpha };\n};\nexport var toHsla = function (pixel) {\n    var r = pixel.red, g = pixel.green, b = pixel.blue, a = pixel.alpha;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    a /= 255;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var middle = (max + min) / 2;\n    var h = middle;\n    var s = middle;\n    var l = middle;\n    if (max === min) {\n        h = s = 0;\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return { hue: h, saturation: s, lightness: s, alpha: a };\n};\nvar RGBA = {\n    channels: 4\n};\nexport var COLOR_PROFILES = {\n    RGBA: RGBA\n};\nvar isEven = function (n) { return n % 2 === 0; };\nvar EMPTY_PIXEL = {\n    red: 0,\n    green: 0,\n    blue: 0,\n    alpha: 255\n};\nexport var vonNeumannOffsets = [\n    { x: -1, y: 0 },\n    { x: 1, y: 0 },\n    { x: 0, y: -1 },\n    { x: 0, y: 1 }\n];\nexport var mooreOffsets = [];\nfor (var x = -1; x <= 1; x++) {\n    for (var y = -1; y <= 1; y++) {\n        if (x === 0 && y === 0) {\n            continue;\n        }\n        mooreOffsets.push({ x: x, y: y });\n    }\n}\nvar PixelMatrix = /** @class */ (function () {\n    function PixelMatrix(width, height, pixels) {\n        this.width = width;\n        this.height = height;\n        var pixelsLength = width * height * this.colorProfile.channels;\n        if (pixels === undefined) {\n            pixels = new Uint8ClampedArray(pixelsLength);\n        }\n        else {\n            if (pixelsLength !== pixels.length) {\n                throw new Error(\"Expected pixels to have length \" + pixelsLength + \" (width * height * colorProfile.channels) but got \" + pixels.length + \" instead.\");\n            }\n        }\n        this.pixels = pixels;\n    }\n    PixelMatrix.fromCanvas = function (canvas) {\n        var context = canvas.getContext('2d');\n        var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        return new PixelMatrix(canvas.width, canvas.height, imageData.data);\n    };\n    Object.defineProperty(PixelMatrix.prototype, \"pixelMatrix\", {\n        get: function () {\n            if (!this._pixelMatrix) {\n                var pixelMatrix_1 = new Array(this.width);\n                this.forEach(function (pixel, point) {\n                    if (!pixelMatrix_1[point.x])\n                        pixelMatrix_1[point.x] = [];\n                    pixelMatrix_1[point.x][point.y] = pixel;\n                });\n                this._pixelMatrix = pixelMatrix_1;\n            }\n            return this._pixelMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"channels\", {\n        get: function () {\n            return this.colorProfile.channels;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"colorProfile\", {\n        get: function () {\n            return RGBA;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"shape\", {\n        get: function () {\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PixelMatrix.prototype, \"countPixels\", {\n        get: function () {\n            return this.width * this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PixelMatrix.prototype.get = function (point) {\n        if (!this.contains(point)) {\n            throw new Error(\"This pixel matrix doesn't contain the point \" + point + \".\");\n        }\n        var i = this.getIndex(point);\n        var channels = [];\n        for (var channelOffset = 0; channelOffset < this.colorProfile.channels; channelOffset++) {\n            var channel = this.pixels[i + channelOffset];\n            if (!channel)\n                return EMPTY_PIXEL;\n            channels.push(channel);\n        }\n        var red = channels[0], green = channels[1], blue = channels[2], alpha = channels[3];\n        return { red: red, green: green, blue: blue, alpha: alpha };\n    };\n    PixelMatrix.prototype.getRandomPoint = function () {\n        var x = Math.floor(Math.random() * this.width);\n        var y = Math.floor(Math.random() * this.height);\n        return { x: x, y: y };\n    };\n    PixelMatrix.prototype.getRandomPixel = function () {\n        var randomPoint = this.getRandomPoint();\n        return this.get(randomPoint);\n    };\n    PixelMatrix.prototype.getVonNeumannNeighboringPixels = function (point) {\n        return this.getNeighboringPixels(point, vonNeumannOffsets);\n    };\n    PixelMatrix.prototype.getVonNeumannNeighboringPoints = function (point) {\n        return this.getNeighbors(point, vonNeumannOffsets);\n    };\n    PixelMatrix.prototype.getMooreNeighboringPixels = function (point) {\n        return this.getNeighboringPixels(point, mooreOffsets);\n    };\n    PixelMatrix.prototype.getMooreNeighboringPoints = function (point) {\n        return this.getNeighbors(point, mooreOffsets);\n    };\n    PixelMatrix.prototype.getNeighboringPixels = function (point, neighborhood) {\n        var _this = this;\n        return this.getNeighbors(point, neighborhood).map(function (neighbor) {\n            return _this.get(neighbor);\n        });\n    };\n    PixelMatrix.prototype.getNeighbors = function (point, neighborhood) {\n        var _this = this;\n        var neighbors = [];\n        neighborhood.forEach(function (offset) {\n            var neighbor = {\n                x: point.x + offset.x,\n                y: point.y + offset.y\n            };\n            if (_this.contains(neighbor)) {\n                neighbors.push(neighbor);\n            }\n        });\n        return neighbors;\n    };\n    PixelMatrix.prototype.setHsla = function (point, pixel) {\n        this.set(point, toRgba(pixel));\n    };\n    PixelMatrix.prototype.set = function (point, pixel) {\n        var red = pixel.red, green = pixel.green, blue = pixel.blue, alpha = pixel.alpha;\n        var i = this.getIndex(point);\n        this.pixels[i] = red;\n        this.pixels[i + 1] = green;\n        this.pixels[i + 2] = blue;\n        this.pixels[i + 3] = alpha;\n        this.pixelMatrix[point.x][point.y] = pixel;\n    };\n    PixelMatrix.prototype.randomDitherFrom = function (newMatrix, samples) {\n        var _this = this;\n        if (samples === void 0) { samples = 1000; }\n        var _loop_1 = function (_) {\n            var point = this_1.getRandomPoint();\n            var newPixel = newMatrix.get(point);\n            var p = newPixel;\n            var darkeningFactor = 0;\n            if (Math.random() > 0.5) {\n                p = {\n                    red: p.red - darkeningFactor,\n                    green: p.green - darkeningFactor,\n                    blue: p.blue - darkeningFactor,\n                    alpha: 255\n                };\n            }\n            this_1.getVonNeumannNeighboringPoints(point).forEach(function (neighbor) {\n                _this.set(neighbor, p);\n            });\n        };\n        var this_1 = this;\n        for (var _ = 0; _ < samples; _++) {\n            _loop_1(_);\n        }\n    };\n    PixelMatrix.prototype.getIndex = function (point) {\n        var x = point.x, y = point.y;\n        if (!this.contains(point)) {\n            throw new Error(\"Expected x and y to be less than or equal to (\" + this.width + \", \" + this.height + \") but was actually (\" + x + \", \" + y + \")\");\n        }\n        return y * (this.width * this.channels) + x * this.channels;\n    };\n    PixelMatrix.prototype.forEach = function (fn) {\n        for (var y = 0; y < this.height; y++) {\n            for (var x = 0; x < this.width; x++) {\n                var point = Object.freeze({ x: x, y: y });\n                var pixel = this.get(point);\n                fn(pixel, point, this);\n            }\n        }\n    };\n    PixelMatrix.prototype.map = function (fn) {\n        var newPixelMatrix = new PixelMatrix(this.width, this.height);\n        this.forEach(function (pixel, point, pixelMatrix) {\n            var newPixel = fn(pixel, point, pixelMatrix);\n            newPixelMatrix.set(point, newPixel);\n        });\n        return newPixelMatrix;\n    };\n    PixelMatrix.prototype.normalizedMap = function (fn) {\n        var _this = this;\n        return this.map(function (pixel, point, pixelMatrix) {\n            var normalizedPoint = {\n                x: point.x / _this.width,\n                y: point.y / _this.height\n            };\n            return fn(pixel, normalizedPoint, pixelMatrix);\n        });\n    };\n    PixelMatrix.prototype.reduce = function (fn, startingValue) {\n        var total = startingValue;\n        this.forEach(function (pixel, point) {\n            total = fn(total, pixel, point);\n        });\n        return total;\n    };\n    PixelMatrix.prototype.getWindow = function (center, width, height) {\n        if (isEven(width)) {\n            throw new Error(\"Expected an odd window width, but got \" + width);\n        }\n        if (isEven(height)) {\n            throw new Error(\"Expected an odd window height, but got \" + height);\n        }\n        var xRadius = (width - 1) / 2;\n        var yRadius = (height - 1) / 2;\n        var windowMatrix = new PixelMatrix(width, height);\n        for (var yOffset = -yRadius; yOffset <= yRadius; yOffset++) {\n            for (var xOffset = -xRadius; xOffset <= xRadius; xOffset++) {\n                var x = center.x + xOffset;\n                var y = center.y + yOffset;\n                var point = { x: x, y: y };\n                var pixel = this.contains(point) ? this.get(point) : EMPTY_PIXEL;\n                var pointInWindow = { x: xOffset + xRadius, y: yOffset + yRadius };\n                windowMatrix.set(pointInWindow, pixel);\n            }\n        }\n        return windowMatrix;\n    };\n    PixelMatrix.prototype.contains = function (point) {\n        return (point.x >= 0 &&\n            point.x < this.width &&\n            point.y >= 0 &&\n            point.y < this.height);\n    };\n    PixelMatrix.prototype.toImageData = function () {\n        return new ImageData(this.pixels, this.width, this.height);\n    };\n    PixelMatrix.prototype.putPixels = function (canvas) {\n        if (canvas.width !== this.width || canvas.height !== this.height) {\n            throw new Error(\"Expected canvas shape and PixelMatrix shape to be the same, but canvas shape was [\" + canvas.width + \", \" + canvas.height + \"] and PixelMatrix shape was \" + this.shape + \".\");\n        }\n        var context = canvas.getContext('2d');\n        context.putImageData(this.toImageData(), 0, 0);\n    };\n    PixelMatrix.prototype.getCenter = function () {\n        var x = Math.floor(this.width / 2);\n        var y = Math.floor(this.height / 2);\n        return { x: x, y: y };\n    };\n    return PixelMatrix;\n}());\nexport default PixelMatrix;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground } from 'docz'\nimport PixelMatrix from '../built/PixelMatrix'\nimport exampleImageUrl from './kawase.small.jpg'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"api-reference\"}}>{`API Reference`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"fromcanvas\"}}>{`fromCanvas`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const pixelMatrix = PixelMatrix.fromCanvas(canvas)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Creates a pixel matrix from a canvas, taking the canvas' width, height, and pixel data.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import PixelMatrix from '@noisemachines/pixel-matrix'\n\n// Create a canvas\nconst canvas = document.createElement('canvas')\ncanvas.width = 100\ncanvas.height = 100\n\n// Fill it with coral red.\nconst context = canvas.getContext('2d')\ncontext.fillStyle = 'rgb(222, 98, 98)'\ncontext.fillRect(0, 0, 100, 100)\n\n// pixelMatrix will copy over the width, height, and\n// pixel contents of canvas. So in this case, it\n// will be 100 x 100, and filled with a lovely\n// coral red.\nconst pixelMatrix = PixelMatrix.fromCanvas(canvas)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"countpixels\"}}>{`countPixels`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const width = 10\nconst height = 10\nconst oneHundred = new PixelMatrix(width, height).countPixels\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The pixel matrix's width times its height.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"new-pixelmatrix\"}}>{`new PixelMatrix`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const pixelMatrix = new PixelMatrix(\n  10, // width\n  10, // height\n  pixels // Uint8ClampedArray\n)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`PixelMatrix constructor. The usual way to make new pixel matrices.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"get\"}}>{`get`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const pixel = pixelMatrix.get(point)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`point`}</MDXTag>{` is a JSON object like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`{ x: 0, y : 0 }`}</MDXTag>{`. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pixel`}</MDXTag>{` is a JSON object like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`{ red: 255, green: 255, blue: 255, alpha: 255 }`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getrandompoint\"}}>{`getRandomPoint`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const point = pixelMatrix.getRandomPoint()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns a random point in the pixel matrix.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getrandompixel\"}}>{`getRandomPixel`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const pixel = pixelMatrix.getRandomPixel()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns a random pixel from the pixel matrix.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getvonneumannneighboringpixels\"}}>{`getVonNeumannNeighboringPixels`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const pixels = pixelMatrix.getVonNeumannNeighboringPixels(point)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the pixels to the north, east, south, and west of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`point`}</MDXTag>{`. In other words, the pixels in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\"}}>{`von Neumann neighborhood`}</MDXTag>{` around that point.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getvonneumannneighboringpoints\"}}>{`getVonNeumannNeighboringPoints`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const points = pixelMatrix.getVonNeumannNeighboringPoints(point)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Returns the points to the north, east, south, and west of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`point`}</MDXTag>{`. In other words, the points in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\"}}>{`von Neumann neighborhood`}</MDXTag>{` around that point.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  ","module.exports = __webpack_public_path__ + \"static/img/kawase.small.5e202840.jpg\";"],"sourceRoot":""}